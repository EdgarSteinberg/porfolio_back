openapi: 3.0.1
info:
  title: Users API
  description: API para gestionar usuarios y sus credenciales en una plataforma web. Ofrece funcionalidades para crear, actualizar, obtener y eliminar usuarios, permitiendo la administración de roles como 'user', 'admin' y 'premium'.
  version: 1.0.0
paths:
  /api/users:
    get:
      summary: Obtener todos los usuarios
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '400':
          description: Error en la solicitud
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: 'Error al obtener usuarios'

    post:
      summary: Registrar un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                age:
                  type: integer
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    $ref: '#/components/schemas/User'
        '400':
          description: Error en la solicitud
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: 'Todos los campos son obligatorios'

  /api/users/{uid}:
    get:
      summary: Obtener un usuario por ID
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    $ref: '#/components/schemas/User'
        '400':
          description: Error en la solicitud
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: 'Error al obtener el usuario'

    put:
      summary: Actualizar un usuario por ID
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                age:
                  type: integer
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Usuario actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    $ref: '#/components/schemas/User'
        '500':
          description: Error en la actualización
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: 'Error al actualizar el usuario'

    delete:
      summary: Eliminar un usuario por ID
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        '200':
          description: Usuario eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: string
                    example: 'Usuario eliminado exitosamente'
        '500':
          description: Error en la eliminación
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: 'Error al eliminar el usuario'

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        age:
          type: integer
        email:
          type: string
          format: email
        password:  # Añadir esta línea si es necesario
          type: string
        role:  # Añadir esta línea si es necesario
          type: string
          enum: ['user', 'admin', 'premium']
